//03_JSBasic01.js


//1. 출력 관련 명령
console.log(123+"abcd");
console.log(123,"abcd");
// - console.log의 끝에는 줄바꿈 명령이 포함되어 있어서, 명령이 끝나면 자동으로 개행됩니다.
// - 두개의 값을 위와 같이 하나의 console.log 에 출력하려면 ','로 구분해서 써주면 약간의 공백과 함께 출력됩니다.

// - 두개의 명령으로 출력되는 내용이 한줄에 나오게 하고 싶다면
process.stdout.write(132+'abcd');
process.stdout.write(132+'abcd');
//위 명령은 중간에 ','를 사용하지 않고 '+'로 이어불이기만 가능합니다.
console.log();
console.log("---------------------------------------------------------------");

// 2 문자 자료형
// 자료형에는 문자 자료와 숫자 자료가 존재합니다. 그들을 저장할 수 있는 변수도 존재합니다.
// 자바와 달리 char , String , int, double 등의 세부적인 구분이 없고
// 문자형 자료와 숫자형 자료로 구분하여 사용하곤 합니다.
// 문자형 자료에서도 자료를 구분하기위한 "", ''등의 구분이 없어서
// "문자형 자료" '문자형 자료' 둘의 표현이 모두 가능합니다.
// 줄바꿈 또는 tab 같은 이스테이프 문자가 자바와 똑같이 사용됩니다.
// - 이스케이프 문자 들 : \n , \' , \" , \t , \\ 등

console.log('Hello Javascript - 작은따옴표 사용');
console.log("Hello Javascript - 큰따옴표 사용");
console.log("Hello 'Javascript' - 혼합된 사용1");
console.log('Hello "Javascript" - 혼합된 사용2');
console.log("Hello, \"Javascript\" - 이스케이프 문자사용");
console.log('Hello, \'Javascript\' - 이스케이프 문자사용');
console.log("---------------------------------------------------------------");


//3. 숫자 자료형
// 정수와 실수의 구분을 따로하지 않습니다. 다만 내부적으로는 구분되어 관리되고는 있습니다.
console.log("정수 : ", 273);
console.log("실수 : ", 3.123);
console.log("---------------------------------------------------------------");


//4. 산술 연산자 + , - , * ,/ , %
console.log("27+35=",(27+35));
console.log("27-35=",(27-35));
console.log("27*35=",(27*35));
console.log("27÷35=",(27/35)); //정수들의 나눗셈 연산도 수수점이 발생한다.
console.log("27%35=",(27%35));
console.log("---------------------------------------------------------------");

//5.비교 연산자 : <,>,<=,>=,==,!=
console.log("27>35=",(27>35));
console.log("27=='27'=",(27=='27')," : 형변환 후의 값이 같으면 true"); 
console.log("27==='27'=",(27==='27'), " : 자료형과 값이 모두 같아야 true");
console.log("27!=='27'=",(27!=='27'));


console.log("---------------------------------------------------------------");
//6. 논리 연산자  : &&(And) , ||(Or), !(Not)
console.log("52>135 && 45 < 78 =>"+(52>135 && 45 < 78));